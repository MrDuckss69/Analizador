Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    DIFERENTE
    DIV
    ENTERO
    IGUAL
    LLLA
    MAYORDER
    MAYORIGUAL
    MAYORIZQ
    MAYORQUE
    MENORIGUAL
    MENORQUE
    MIENTRAS
    MULT
    NOT
    NUMERAL
    OR
    PARA
    PRINTLN
    RESTA
    RLLA
    SI
    SINO

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA IDENTIFICADOR LPAR RPAR LCOR declaraciones RCOR
Rule 2     declaraciones -> declaraciones declaracion
Rule 3     declaraciones -> declaracion
Rule 4     declaracion -> INT lista_variables PUNTOCOMA
Rule 5     declaracion -> READ VARIABLE PUNTOCOMA
Rule 6     declaracion -> PRINTF LPAR COMADOS VARIABLE COMADOS RPAR PUNTOCOMA
Rule 7     declaracion -> VARIABLE ASIGNAR VARIABLE SUMA VARIABLE PUNTOCOMA
Rule 8     declaracion -> END PUNTOCOMA
Rule 9     lista_variables -> VARIABLE COMA lista_variables
Rule 10    lista_variables -> VARIABLE

Terminals, with rules where they appear

AND                  : 
ASIGNAR              : 7
COMA                 : 9
COMADOS              : 6 6
DIFERENTE            : 
DIV                  : 
END                  : 8
ENTERO               : 
IDENTIFICADOR        : 1
IGUAL                : 
INT                  : 4
LCOR                 : 1
LLLA                 : 
LPAR                 : 1 6
MAYORDER             : 
MAYORIGUAL           : 
MAYORIZQ             : 
MAYORQUE             : 
MENORIGUAL           : 
MENORQUE             : 
MIENTRAS             : 
MULT                 : 
NOT                  : 
NUMERAL              : 
OR                   : 
PARA                 : 
PRINTF               : 6
PRINTLN              : 
PROGRAMA             : 1
PUNTOCOMA            : 4 5 6 7 8
RCOR                 : 1
READ                 : 5
RESTA                : 
RLLA                 : 
RPAR                 : 1 6
SI                   : 
SINO                 : 
SUMA                 : 7
VARIABLE             : 5 6 7 7 7 9 10
error                : 

Nonterminals, with rules where they appear

declaracion          : 2 3
declaraciones        : 1 2
lista_variables      : 4 9
programa             : 0

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA IDENTIFICADOR LPAR RPAR LCOR declaraciones RCOR

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . IDENTIFICADOR LPAR RPAR LCOR declaraciones RCOR

    IDENTIFICADOR   shift and go to state 3


state 3

    (1) programa -> PROGRAMA IDENTIFICADOR . LPAR RPAR LCOR declaraciones RCOR

    LPAR            shift and go to state 4


state 4

    (1) programa -> PROGRAMA IDENTIFICADOR LPAR . RPAR LCOR declaraciones RCOR

    RPAR            shift and go to state 5


state 5

    (1) programa -> PROGRAMA IDENTIFICADOR LPAR RPAR . LCOR declaraciones RCOR

    LCOR            shift and go to state 6


state 6

    (1) programa -> PROGRAMA IDENTIFICADOR LPAR RPAR LCOR . declaraciones RCOR
    (2) declaraciones -> . declaraciones declaracion
    (3) declaraciones -> . declaracion
    (4) declaracion -> . INT lista_variables PUNTOCOMA
    (5) declaracion -> . READ VARIABLE PUNTOCOMA
    (6) declaracion -> . PRINTF LPAR COMADOS VARIABLE COMADOS RPAR PUNTOCOMA
    (7) declaracion -> . VARIABLE ASIGNAR VARIABLE SUMA VARIABLE PUNTOCOMA
    (8) declaracion -> . END PUNTOCOMA

    INT             shift and go to state 9
    READ            shift and go to state 10
    PRINTF          shift and go to state 12
    VARIABLE        shift and go to state 11
    END             shift and go to state 13

    declaraciones                  shift and go to state 7
    declaracion                    shift and go to state 8

state 7

    (1) programa -> PROGRAMA IDENTIFICADOR LPAR RPAR LCOR declaraciones . RCOR
    (2) declaraciones -> declaraciones . declaracion
    (4) declaracion -> . INT lista_variables PUNTOCOMA
    (5) declaracion -> . READ VARIABLE PUNTOCOMA
    (6) declaracion -> . PRINTF LPAR COMADOS VARIABLE COMADOS RPAR PUNTOCOMA
    (7) declaracion -> . VARIABLE ASIGNAR VARIABLE SUMA VARIABLE PUNTOCOMA
    (8) declaracion -> . END PUNTOCOMA

    RCOR            shift and go to state 14
    INT             shift and go to state 9
    READ            shift and go to state 10
    PRINTF          shift and go to state 12
    VARIABLE        shift and go to state 11
    END             shift and go to state 13

    declaracion                    shift and go to state 15

state 8

    (3) declaraciones -> declaracion .

    RCOR            reduce using rule 3 (declaraciones -> declaracion .)
    INT             reduce using rule 3 (declaraciones -> declaracion .)
    READ            reduce using rule 3 (declaraciones -> declaracion .)
    PRINTF          reduce using rule 3 (declaraciones -> declaracion .)
    VARIABLE        reduce using rule 3 (declaraciones -> declaracion .)
    END             reduce using rule 3 (declaraciones -> declaracion .)


state 9

    (4) declaracion -> INT . lista_variables PUNTOCOMA
    (9) lista_variables -> . VARIABLE COMA lista_variables
    (10) lista_variables -> . VARIABLE

    VARIABLE        shift and go to state 17

    lista_variables                shift and go to state 16

state 10

    (5) declaracion -> READ . VARIABLE PUNTOCOMA

    VARIABLE        shift and go to state 18


state 11

    (7) declaracion -> VARIABLE . ASIGNAR VARIABLE SUMA VARIABLE PUNTOCOMA

    ASIGNAR         shift and go to state 19


state 12

    (6) declaracion -> PRINTF . LPAR COMADOS VARIABLE COMADOS RPAR PUNTOCOMA

    LPAR            shift and go to state 20


state 13

    (8) declaracion -> END . PUNTOCOMA

    PUNTOCOMA       shift and go to state 21


state 14

    (1) programa -> PROGRAMA IDENTIFICADOR LPAR RPAR LCOR declaraciones RCOR .

    $end            reduce using rule 1 (programa -> PROGRAMA IDENTIFICADOR LPAR RPAR LCOR declaraciones RCOR .)


state 15

    (2) declaraciones -> declaraciones declaracion .

    RCOR            reduce using rule 2 (declaraciones -> declaraciones declaracion .)
    INT             reduce using rule 2 (declaraciones -> declaraciones declaracion .)
    READ            reduce using rule 2 (declaraciones -> declaraciones declaracion .)
    PRINTF          reduce using rule 2 (declaraciones -> declaraciones declaracion .)
    VARIABLE        reduce using rule 2 (declaraciones -> declaraciones declaracion .)
    END             reduce using rule 2 (declaraciones -> declaraciones declaracion .)


state 16

    (4) declaracion -> INT lista_variables . PUNTOCOMA

    PUNTOCOMA       shift and go to state 22


state 17

    (9) lista_variables -> VARIABLE . COMA lista_variables
    (10) lista_variables -> VARIABLE .

    COMA            shift and go to state 23
    PUNTOCOMA       reduce using rule 10 (lista_variables -> VARIABLE .)


state 18

    (5) declaracion -> READ VARIABLE . PUNTOCOMA

    PUNTOCOMA       shift and go to state 24


state 19

    (7) declaracion -> VARIABLE ASIGNAR . VARIABLE SUMA VARIABLE PUNTOCOMA

    VARIABLE        shift and go to state 25


state 20

    (6) declaracion -> PRINTF LPAR . COMADOS VARIABLE COMADOS RPAR PUNTOCOMA

    COMADOS         shift and go to state 26


state 21

    (8) declaracion -> END PUNTOCOMA .

    RCOR            reduce using rule 8 (declaracion -> END PUNTOCOMA .)
    INT             reduce using rule 8 (declaracion -> END PUNTOCOMA .)
    READ            reduce using rule 8 (declaracion -> END PUNTOCOMA .)
    PRINTF          reduce using rule 8 (declaracion -> END PUNTOCOMA .)
    VARIABLE        reduce using rule 8 (declaracion -> END PUNTOCOMA .)
    END             reduce using rule 8 (declaracion -> END PUNTOCOMA .)


state 22

    (4) declaracion -> INT lista_variables PUNTOCOMA .

    RCOR            reduce using rule 4 (declaracion -> INT lista_variables PUNTOCOMA .)
    INT             reduce using rule 4 (declaracion -> INT lista_variables PUNTOCOMA .)
    READ            reduce using rule 4 (declaracion -> INT lista_variables PUNTOCOMA .)
    PRINTF          reduce using rule 4 (declaracion -> INT lista_variables PUNTOCOMA .)
    VARIABLE        reduce using rule 4 (declaracion -> INT lista_variables PUNTOCOMA .)
    END             reduce using rule 4 (declaracion -> INT lista_variables PUNTOCOMA .)


state 23

    (9) lista_variables -> VARIABLE COMA . lista_variables
    (9) lista_variables -> . VARIABLE COMA lista_variables
    (10) lista_variables -> . VARIABLE

    VARIABLE        shift and go to state 17

    lista_variables                shift and go to state 27

state 24

    (5) declaracion -> READ VARIABLE PUNTOCOMA .

    RCOR            reduce using rule 5 (declaracion -> READ VARIABLE PUNTOCOMA .)
    INT             reduce using rule 5 (declaracion -> READ VARIABLE PUNTOCOMA .)
    READ            reduce using rule 5 (declaracion -> READ VARIABLE PUNTOCOMA .)
    PRINTF          reduce using rule 5 (declaracion -> READ VARIABLE PUNTOCOMA .)
    VARIABLE        reduce using rule 5 (declaracion -> READ VARIABLE PUNTOCOMA .)
    END             reduce using rule 5 (declaracion -> READ VARIABLE PUNTOCOMA .)


state 25

    (7) declaracion -> VARIABLE ASIGNAR VARIABLE . SUMA VARIABLE PUNTOCOMA

    SUMA            shift and go to state 28


state 26

    (6) declaracion -> PRINTF LPAR COMADOS . VARIABLE COMADOS RPAR PUNTOCOMA

    VARIABLE        shift and go to state 29


state 27

    (9) lista_variables -> VARIABLE COMA lista_variables .

    PUNTOCOMA       reduce using rule 9 (lista_variables -> VARIABLE COMA lista_variables .)


state 28

    (7) declaracion -> VARIABLE ASIGNAR VARIABLE SUMA . VARIABLE PUNTOCOMA

    VARIABLE        shift and go to state 30


state 29

    (6) declaracion -> PRINTF LPAR COMADOS VARIABLE . COMADOS RPAR PUNTOCOMA

    COMADOS         shift and go to state 31


state 30

    (7) declaracion -> VARIABLE ASIGNAR VARIABLE SUMA VARIABLE . PUNTOCOMA

    PUNTOCOMA       shift and go to state 32


state 31

    (6) declaracion -> PRINTF LPAR COMADOS VARIABLE COMADOS . RPAR PUNTOCOMA

    RPAR            shift and go to state 33


state 32

    (7) declaracion -> VARIABLE ASIGNAR VARIABLE SUMA VARIABLE PUNTOCOMA .

    RCOR            reduce using rule 7 (declaracion -> VARIABLE ASIGNAR VARIABLE SUMA VARIABLE PUNTOCOMA .)
    INT             reduce using rule 7 (declaracion -> VARIABLE ASIGNAR VARIABLE SUMA VARIABLE PUNTOCOMA .)
    READ            reduce using rule 7 (declaracion -> VARIABLE ASIGNAR VARIABLE SUMA VARIABLE PUNTOCOMA .)
    PRINTF          reduce using rule 7 (declaracion -> VARIABLE ASIGNAR VARIABLE SUMA VARIABLE PUNTOCOMA .)
    VARIABLE        reduce using rule 7 (declaracion -> VARIABLE ASIGNAR VARIABLE SUMA VARIABLE PUNTOCOMA .)
    END             reduce using rule 7 (declaracion -> VARIABLE ASIGNAR VARIABLE SUMA VARIABLE PUNTOCOMA .)


state 33

    (6) declaracion -> PRINTF LPAR COMADOS VARIABLE COMADOS RPAR . PUNTOCOMA

    PUNTOCOMA       shift and go to state 34


state 34

    (6) declaracion -> PRINTF LPAR COMADOS VARIABLE COMADOS RPAR PUNTOCOMA .

    RCOR            reduce using rule 6 (declaracion -> PRINTF LPAR COMADOS VARIABLE COMADOS RPAR PUNTOCOMA .)
    INT             reduce using rule 6 (declaracion -> PRINTF LPAR COMADOS VARIABLE COMADOS RPAR PUNTOCOMA .)
    READ            reduce using rule 6 (declaracion -> PRINTF LPAR COMADOS VARIABLE COMADOS RPAR PUNTOCOMA .)
    PRINTF          reduce using rule 6 (declaracion -> PRINTF LPAR COMADOS VARIABLE COMADOS RPAR PUNTOCOMA .)
    VARIABLE        reduce using rule 6 (declaracion -> PRINTF LPAR COMADOS VARIABLE COMADOS RPAR PUNTOCOMA .)
    END             reduce using rule 6 (declaracion -> PRINTF LPAR COMADOS VARIABLE COMADOS RPAR PUNTOCOMA .)

